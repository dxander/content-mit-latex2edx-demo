<?xml version="1.0"?>
<problem display_name="Oil versis geothermal energy" attempts="5">
  <text>
    <script type="text/python" system_path="python_lib">
ans0 = 0.078
ans1 = 4.6e-4
expected=[ ans0, ans1 ]
</script>
    <p>
      <script>
# the global variable "expected" should be defined before functions in this script are called
#
# if the problem has more than one answer box, then "expected" should be a list, and
# hint_mag0, hint_mag1, etc should be used in sequential order for each answer box.

from math import log10
from calc import evaluator

def is_close(ans, expect):
    # compute difference of ans and expected, in terms of order of magnitude
    try:
        magdif = abs( log10(abs(float(ans)))-log10(abs(expect)) )
    except Exception as err:
        return ""
    if magdif &amp;gt; 2:
        return "You are more than two orders of magnitude off&amp;lt;br/&amp;gt;"
    return ""

def is_tight(ans, expect, tolpct=0.01):
    # compute difference of ans and expected, and return True if within tolerance percentage
    difpct = abs( float(ans) - float(expect) ) / float(expect)
    return difpct &lt;= tolpct

def in_range(ans, range):
    ansf = float(ans)
    return ansf &gt;= range[0] and ansf &lt;= range[1]

def is_sign_correct(ans, expect):
    # see if sign is same between ans and expect
    try:
        signdif = math.copysign(1, float(ans)) * math.copysign(1, float(expect))
    except Exception as err:
        return ""
    if signdif &amp;lt; 0:
        return "Is the sign of your answer correct?&amp;lt;br/&amp;gt;"
    return ""

def hint_mag0_sign(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=0, sign=True)

def hint_mag0(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=0)

def hint_mag1_sign(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=1, sign=True)

def hint_mag1(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=1)

def hint_mag2_sign(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=2, sign=True)

def hint_mag2(answer_ids, student_answers, new_cmap, old_cmap):
    hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=2)

def hint_mag(answer_ids, student_answers, new_cmap, old_cmap, anum=0, sign=False):
    global expected

    try:
        aid = answer_ids[0]
    except Exception as err:
        raise Exception('cannot get answer_ids[%d], answer_ids=%s, new_cmap=%s, err=%s' % (anum, answer_ids, new_cmap, err))

    ans = student_answers[aid]
    try:
        ans = float(ans)
    except Exception as err:
        try:
            ans = evaluator({},{}, ans)
        except Exception as err:
            hint = '&lt;font color="red"&gt;Cannot evaluate your answer&lt;/font&gt;'
            new_cmap.set_hint_and_mode(aid, hint, 'always')
            return

    try:
        if type(expected)==list:
            expect = expected[anum]
        else:
            expect = expected
    except Exception as err:
        raise Exception('expected answer not evaluated, expected=%s, anum=%s, err=%s' % (expected, anum, str(err)))

    # if expect is a dict, then generate hints by range in addition to 
    extra_hints = []
    hint = ''
    if type(expect)==dict:
        expect_dict = expect
        expect = expect_dict['val']
        extra_hints = expect_dict.get('extra_hints', [])

    if new_cmap.is_correct(aid):
        # if correct, make sure answer is close, else direct student to look at solution
        if not is_tight(ans, expect, 0.01):
            hint = '&lt;font color="green"&gt;Your answer is accepted as correct, but more than 1% from the expected.  Please check the solutions, and use the expected answer in any further calculations.&lt;/font&gt;'

    else:
        hint = is_close(ans, expect)
        if not hint and sign:
            hint = is_sign_correct(ans, expect)

        for eh in extra_hints:
            range = eh.get('range','')
            if range:
                if in_range(ans, range):
                    hint += '  ' + eh['hint']

    if hint:
        new_cmap.set_hint_and_mode(aid, hint, 'always')

</script>
    </p>
    <p>
Both oil and geothermal fluid need to be pumped from the ground. Compare the power needed to pump the geothermal fluid [mathjaxinline]P_{\rm geo, grav}[/mathjaxinline] with the power available from the geothermal fluid [mathjaxinline]P_{\rm geo}[/mathjaxinline] (when pumped at 30 l/s). </p>
    <p>
Assume the pump provides all energy needed to lift the fluid from a depth of 2&#xA0;km. Disregard the lift from reservoir pressure. </p>
    <p>
      <p style="display:inline">[mathjaxinline]P_{\rm geo, grav}/P_{\rm geo}[/mathjaxinline] =</p>
      <numericalresponse inline="1" answer="$ans0">
        <textline inline="1">
          <responseparam type="tolerance" default="5%"/>
        </textline>
        <hintgroup hintfn="hint_mag0"/>
      </numericalresponse>
    </p>
    <p>
Now do similarly for oil. Compare the power needed to pump oil [mathjaxinline]P_{\rm oil, grav}[/mathjaxinline] with the power available from the oil [mathjaxinline]P_{\rm oil}[/mathjaxinline] (when pumped at 30 l/s). Assume the oil has a mass density of [mathjaxinline]0.9[/mathjaxinline] kg/l. </p>
    <p>
      <p style="display:inline">[mathjaxinline]P_{\rm oil, grav}/P_{\rm oil}[/mathjaxinline] =</p>
      <numericalresponse inline="1" answer="$ans1">
        <textline inline="1">
          <responseparam type="tolerance" default="12%"/>
        </textline>
        <hintgroup hintfn="hint_mag1"/>
      </numericalresponse>
    </p>
    <p>
      <p>
 At 30&#xA0;l/s, the total power provided by the geothermal source is </p>
      <table id="a0000000003" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
        <tr>
          <td class="equation" style="border:none">[mathjax]P_{\rm geo} = E_{\rm geo}\rm (30~ l/s)(1~ kg/l) = 7.5~ MW[/mathjax]</td>
        </tr>
      </table>
      <p>
 The total rate of energy consumption due to gravitational potential energy is </p>
      <table id="a0000000004" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
        <tr>
          <td class="equation" style="border:none">[mathjax]P_{\rm geo, grav} = \rho \ell g Av[/mathjax]</td>
        </tr>
      </table>
      <p>
 where [mathjaxinline]\ell = 2[/mathjaxinline] km is the depth and [mathjaxinline]Av[/mathjaxinline] is the flow rate (30&#xA0;l/s). For the geothermal well, [mathjaxinline]P_{\rm geo, grav} = 588[/mathjaxinline]&#xA0;kW. Thus </p>
      <table id="a0000000005" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
        <tr>
          <td class="equation" style="border:none">[mathjax]P_{\rm geo, grav}/P_{\rm geo} = 0.078 \, ,[/mathjax]</td>
        </tr>
      </table>
      <p>
 or less than 10% of the total energy available. However, once the efficiency of the pump is considered, a large fraction of the energy from the well would need to be used just to run the pump. </p>
      <p>
The mass density of oil is approximately 0.9&#xA0;kg/l, so for the oil well, energy contained in the oil is equivalent to </p>
      <table id="a0000000006" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
        <tr>
          <td class="equation" style="border:none">[mathjax]P_{\rm oil} = (43~ MJ/kg)(30~ l/s)(0.9~ kg/l) = 1.16~ GW[/mathjax]</td>
        </tr>
      </table>
      <p>
 The power required to pump the oil from a depth of 2&#xA0;km is just [mathjaxinline]P_{\rm oil, grav}=529[/mathjaxinline]&#xA0;kW, so </p>
      <table id="a0000000007" class="equation" width="100%" cellspacing="0" cellpadding="7" style="table-layout:auto">
        <tr>
          <td class="equation" style="border:none">[mathjax]P_{\rm geo, grav}/P_{\rm geo} \approx 4.6\times 10^{-4} \, ,[/mathjax]</td>
        </tr>
      </table>
      <p>
 which is very small compared to the amount of energy that can be extracted from the oil. </p>
    </p>
  </text>
</problem>
